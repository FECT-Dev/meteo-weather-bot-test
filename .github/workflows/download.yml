name: Daily Weather PDF Download & Summary

on:
  schedule:
    - cron: '0 3 * * *'  # Runs daily at 03:00 UTC
  workflow_dispatch:

jobs:
  download:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set remote to use Personal Access Token
        env:
          TOKEN: ${{ secrets.ACTIONS_PAT }}
        run: |
          git remote set-url origin https://${TOKEN}@github.com/${{ github.repository }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install system dependencies for Camelot, PDF2Image, and OCR
        run: |
          sudo apt-get update
          sudo apt-get install -y ghostscript python3-tk tesseract-ocr poppler-utils libtesseract-dev

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install camelot-py[cv] pdf2image pytesseract

      - name: Download and extract Chrome & ChromeDriver
        run: |
          wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/126.0.6478.126/linux64/chrome-linux64.zip
          wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/126.0.6478.126/linux64/chromedriver-linux64.zip
          unzip chrome-linux64.zip
          unzip chromedriver-linux64.zip
          chmod +x chrome-linux64/chrome chromedriver-linux64/chromedriver

      - name: Run the download script
        run: python download_weather_pdf.py

      - name: Move and rename the PDF
        run: |
          TODAY=$(date +%Y-%m-%d)
          mkdir -p reports/$TODAY
          if ls downloads/$TODAY/*.pdf 1> /dev/null 2>&1; then
            mv downloads/$TODAY/*.pdf reports/$TODAY/weather-$TODAY.pdf
            echo "‚úÖ Moved PDF to reports/$TODAY/"
          else
            echo "‚ö†Ô∏è No PDF downloaded. Skipping move."
          fi

      - name: Update weather summary with Camelot + OCR fallback
        run: python update_weather_summary.py

      - name: Show Git status before commit
        run: |
          echo "üîç Git status:"
          git status
          git diff --stat || true

      - name: Commit and push updated files
        env:
          TOKEN: ${{ secrets.ACTIONS_PAT }}
        run: |
          git config --global user.name "Auto Commit Bot"
          git config --global user.email "actions@github.com"
          git pull origin main
          git add reports/ weather_summary.csv || true
          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit."
          else
            git commit -m "Add weather report and update summary for $(date +%Y-%m-%d)"
            git push origin main
